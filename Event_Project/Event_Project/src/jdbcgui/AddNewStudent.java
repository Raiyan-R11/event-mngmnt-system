package jdbcgui;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class AddNewStudent extends javax.swing.JFrame {

    /**
     * Creates new form AddNewAdmin
     */
    myDBCon dbCon;
    ResultSet rs;
    LoginUser luser;

    public AddNewStudent(LoginUser user) {
        initComponents();
        luser = user;
        dbCon = new myDBCon();

        // center form in screen 
        this.setLocationRelativeTo(null);

        // set all error labels to invisible
        clearErrorLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtStanding = new javax.swing.JTextField();
        txtFName = new javax.swing.JTextField();
        btnAddNewEmp = new javax.swing.JButton();
        lblMajorError = new javax.swing.JLabel();
        lblConfirmPasswordError = new javax.swing.JLabel();
        lblPasswordError = new javax.swing.JLabel();
        lblFNameError = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        togglePwd = new javax.swing.JCheckBox();
        lblUserIDError = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtLName = new javax.swing.JTextField();
        lblLNameError = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEmailError = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblUsernameError = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMajor = new javax.swing.JTextField();
        lblStandingError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Login User");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Login Student");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Username:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Password:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Confirm Password:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("FName:");

        txtStanding.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtFName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAddNewEmp.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnAddNewEmp.setText("Add New");
        btnAddNewEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewEmpActionPerformed(evt);
            }
        });

        lblMajorError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblMajorError.setForeground(new java.awt.Color(255, 0, 0));
        lblMajorError.setText("error label");

        lblConfirmPasswordError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblConfirmPasswordError.setForeground(new java.awt.Color(255, 0, 0));
        lblConfirmPasswordError.setText("error label");

        lblPasswordError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblPasswordError.setForeground(new java.awt.Color(255, 0, 0));
        lblPasswordError.setText("error label");

        lblFNameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblFNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblFNameError.setText("error label");

        txtPassword.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txtConfirmPassword.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        togglePwd.setText("üëÅ");
        togglePwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togglePwdActionPerformed(evt);
            }
        });

        lblUserIDError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblUserIDError.setForeground(new java.awt.Color(255, 0, 0));
        lblUserIDError.setText("error label");

        txtUserID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("UserID:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("LName:");

        txtLName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblLNameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblLNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblLNameError.setText("error label");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Email:");

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblEmailError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblEmailError.setForeground(new java.awt.Color(255, 0, 0));
        lblEmailError.setText("error label");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Standing:");

        txtUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblUsernameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblUsernameError.setForeground(new java.awt.Color(255, 0, 0));
        lblUsernameError.setText("error label");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Major:");

        txtMajor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblStandingError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblStandingError.setForeground(new java.awt.Color(255, 0, 0));
        lblStandingError.setText("error label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStanding, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(togglePwd))
                            .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblEmailError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                        .addComponent(lblConfirmPasswordError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPasswordError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLNameError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFNameError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUsernameError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUserIDError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblMajorError, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStandingError, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(btnAddNewEmp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserIDError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsernameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFNameError)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(lblLNameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(togglePwd)
                    .addComponent(lblPasswordError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(lblConfirmPasswordError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(lblEmailError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMajorError)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtStanding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblStandingError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddNewEmp)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Change the label name to match the GUI

    void clearErrorLabels() {
        // erase error label text and set visibility to false 
        lblUserIDError.setText("");
        lblFNameError.setText("");
        lblLNameError.setText("");
        lblMajorError.setText("");
        lblPasswordError.setText("");
        lblEmailError.setText("");
        lblConfirmPasswordError.setText("");
        lblStandingError.setText("");
        lblUsernameError.setText("");
    }
    
    boolean isDuplicateUserID(String userid) throws SQLException {
        String stmtSQL = "SELECT * FROM \"USER\" WHERE userid = " + userid;
        ResultSet rs2 = dbCon.executeStatement(stmtSQL);
        return rs2.isBeforeFirst();
    }
    
    boolean isValidData() throws SQLException {
        // check validity of all values entered 
        boolean result = true;
        if (txtUserID.getText().trim().isEmpty() || !isInteger(txtUserID.getText().trim()) || isDuplicateUserID(txtUserID.getText().trim())) {
            if (txtUserID.getText().trim().isEmpty()) {
                lblUserIDError.setText("Required.");
            } else if (!isInteger(txtUserID.getText().trim())) {
                lblUserIDError.setText("Must be an integer.");
            } else if (isDuplicateUserID(txtUserID.getText().trim())){
                lblUserIDError.setText("UserID already exists.");
            }

            lblUserIDError.setVisible(true);
            result = false;
        }

        if (txtFName.getText().trim().isEmpty() || (txtFName.getText().trim().length() > 30)) {
            if (txtFName.getText().trim().isEmpty()) {
                lblFNameError.setText("Required.");
            } else if ((txtFName.getText().trim().length() > 30)) {
                lblFNameError.setText("Must be < 30 chars.");
            }
            lblFNameError.setVisible(true);
            result = false;
        }

        if (txtLName.getText().trim().isEmpty() || (txtLName.getText().trim().length() > 30)) {
            if (txtLName.getText().trim().isEmpty()) {
                lblLNameError.setText("Required.");
            } else if ((txtLName.getText().trim().length() > 30)) {
                lblLNameError.setText("Must be < 30 chars.");
            }

            lblLNameError.setVisible(true);
            result = false;
        }

        if (txtStanding.getText().trim().isEmpty() || (txtStanding.getText().trim().length() > 20)) {
            if (txtStanding.getText().trim().isEmpty()) {
                lblMajorError.setText("Required.");
            } else if ((txtStanding.getText().trim().length() > 20)) {
                lblMajorError.setText("Must be < 20 chars.");
            }

            lblMajorError.setVisible(true);
            result = false;
        }

        if (txtMajor.getText().trim().isEmpty() || (txtMajor.getText().trim().length() > 20)) {
            if (txtMajor.getText().trim().isEmpty()) {
                lblStandingError.setText("Required.");
            } else if ((txtMajor.getText().trim().length() > 20)) {
                lblStandingError.setText("Must be < 20 chars.");
            }

            lblStandingError.setVisible(true);
            result = false;
        }

        if (txtUsername.getText().trim().isEmpty() || (txtUsername.getText().trim().length() > 20)) {
            if (txtUsername.getText().trim().isEmpty()) {
                lblUsernameError.setText("Required.");
            } else if ((txtUsername.getText().trim().length() > 20)) {
                lblUsernameError.setText("Must be < 20 chars.");
            }

            lblUsernameError.setVisible(true);
            result = false;
        }
        
        if (txtEmail.getText().trim().isEmpty() || (txtEmail.getText().trim().length() > 20)) {
            if (txtEmail.getText().trim().isEmpty()) {
                lblEmailError.setText("Required.");
            } else if ((txtEmail.getText().trim().length() > 20)) {
                lblEmailError.setText("Must be < 20 chars.");
            }

            lblEmailError.setVisible(true);
            result = false;
        }
        
                if (txtPassword.getText().trim().isEmpty() || (txtPassword.getText().trim().length() > 10)) {
            if (txtPassword.getText().trim().isEmpty()) {
                lblPasswordError.setText("Required.");
            } else if ((txtPassword.getText().trim().length() > 10)) {
                lblPasswordError.setText("Must be < 10 chars.");
            }

            lblPasswordError.setVisible(true);
            result = false;
        }

        if (!txtConfirmPassword.getText().trim().equals(txtPassword.getText().trim())) {
            lblConfirmPasswordError.setText("Passwords do not match.");
            lblConfirmPasswordError.setVisible(true);
            result = false;
        }

        if (txtConfirmPassword.getText().trim().isEmpty() || (txtConfirmPassword.getText().trim().length() > 25)) {
            if (txtConfirmPassword.getText().trim().isEmpty()) {
                lblConfirmPasswordError.setText("Required.");
            } else if ((txtConfirmPassword.getText().trim().length() > 25)) {
                lblConfirmPasswordError.setText("Must be < 25 chars.");
            }

            lblConfirmPasswordError.setVisible(true);
            result = false;
        }


        return result;
    }

    void clearInputBoxes() {
        // Clear text fields
        txtFName.setText("");
        txtStanding.setText("");
        txtPassword.setText("");
        txtConfirmPassword.setText("");
        txtUserID.setText("");
        txtLName.setText("");
        txtEmail.setText("");
        txtMajor.setText("");
        txtUsername.setText("");
    }

    boolean isValidUsername(String username) {
        boolean result = true;
        try {

            dbCon = new myDBCon();
            ResultSet newrs;
            newrs = dbCon.executeStatement("SELECT * FROM \"USER\" where username = '" + username + "'");

            if (newrs.isBeforeFirst()) {
                result = false;
            }
            newrs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
        return result;
    }

    void updateLogs(String action) {
        try {
            String prepSQL = "INSERT INTO log VALUES (?,?,?,SYSTIMESTAMP)";
            PreparedStatement preparedStatement = dbCon.prepareStatement(prepSQL);
            preparedStatement.setInt(1, luser.userid);
            preparedStatement.setString(2, luser.username);
            preparedStatement.setString(3, action);
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error inserting the logs.");
        }
    }

    private void btnAddNewEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewEmpActionPerformed
        // TODO add your handling code here:

        // verify input data        
        // verify that new user does not currently exist 
        // if all validations are successful then enter the new user
        try {

            clearErrorLabels();
            if (isValidData()) {

                String prepSQL = "INSERT INTO \"USER\" (userid, username, fname, lname, password, email, usertype) "
                        + "VALUES (?, ?, ?, ?, ?, ?, 2)";
                PreparedStatement prepStmt = dbCon.prepareStatement(prepSQL);

                prepStmt.setInt(1, Integer.parseInt(txtUserID.getText().trim()));
                prepStmt.setString(2, txtUsername.getText().trim());
                prepStmt.setString(3, txtFName.getText().trim());
                prepStmt.setString(4, txtLName.getText().trim());
                prepStmt.setString(5, txtPassword.getText().trim());
                prepStmt.setString(6, txtEmail.getText().trim());

                String prepSQL2 = "INSERT INTO student (major, standing, studid) "
                        + "VALUES (?, ?, ?)";

                PreparedStatement prepStmt2 = dbCon.prepareStatement(prepSQL2);

                prepStmt2.setString(1, txtMajor.getText().trim());
                prepStmt2.setString(2, txtStanding.getText().trim());
                prepStmt2.setInt(3, Integer.parseInt(txtUserID.getText().trim()));

                int result = prepStmt.executeUpdate();
                int result2 = prepStmt2.executeUpdate();

                if (result > 0 && result2 > 0) {

                    String action = "New user student added with id " + txtUserID.getText().trim();
                    updateLogs(action);

                    javax.swing.JLabel label = new javax.swing.JLabel("New user student added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new user.");
        }

    }//GEN-LAST:event_btnAddNewEmpActionPerformed

    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    private void togglePwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togglePwdActionPerformed
        // TODO add your handling code here:
        if (togglePwd.isSelected()) {
            txtPassword.setEchoChar((char) 0);
            txtConfirmPassword.setEchoChar((char) 0);
        } else {
            txtPassword.setEchoChar('‚Ä¢');
            txtConfirmPassword.setEchoChar('‚Ä¢');
        }
    }//GEN-LAST:event_togglePwdActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewEmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblConfirmPasswordError;
    private javax.swing.JLabel lblEmailError;
    private javax.swing.JLabel lblFNameError;
    private javax.swing.JLabel lblLNameError;
    private javax.swing.JLabel lblMajorError;
    private javax.swing.JLabel lblPasswordError;
    private javax.swing.JLabel lblStandingError;
    private javax.swing.JLabel lblUserIDError;
    private javax.swing.JLabel lblUsernameError;
    private javax.swing.JCheckBox togglePwd;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtMajor;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtStanding;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
