package jdbcgui;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class AddNewEvent extends javax.swing.JFrame {

    myDBCon dbCon;
    ResultSet rs;
    LoginUser luser;

    /**
     * Creates new form UpdateDeleteDepartment
     */
    public AddNewEvent(LoginUser user) {
        initComponents();
        this.setLocationRelativeTo(null); // center
        luser = user;

        // set all error labels to invisible
        dbCon = new myDBCon();
        clearErrorLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jEventidLabel = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEventidError = new javax.swing.JLabel();
        jNameLabel = new javax.swing.JLabel();
        jLocLabel = new javax.swing.JLabel();
        txtLoc = new javax.swing.JTextField();
        lblNameError = new javax.swing.JLabel();
        lblLocError = new javax.swing.JLabel();
        txtEventid = new javax.swing.JTextField();
        jDateLabel = new javax.swing.JLabel();
        jTimeLabel = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        lblDateError = new javax.swing.JLabel();
        lblTimeError = new javax.swing.JLabel();
        btnAddNewDepartment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add Event");

        jEventidLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jEventidLabel.setText("EventID:");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblEventidError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblEventidError.setForeground(new java.awt.Color(255, 0, 0));
        lblEventidError.setText("error label");

        jNameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jNameLabel.setText("Name:");

        jLocLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLocLabel.setText("Type:");

        txtLoc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblNameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblNameError.setText("error label");

        lblLocError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblLocError.setForeground(new java.awt.Color(255, 0, 0));
        lblLocError.setText("error label");

        txtEventid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtEventid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEventidActionPerformed(evt);
            }
        });

        jDateLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jDateLabel.setText("Date:");

        jTimeLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTimeLabel.setText("Guest:");

        txtDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblDateError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblDateError.setForeground(new java.awt.Color(255, 0, 0));
        lblDateError.setText("error label");

        lblTimeError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblTimeError.setForeground(new java.awt.Color(255, 0, 0));
        lblTimeError.setText("error label");

        btnAddNewDepartment.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnAddNewDepartment.setText("Add New");
        btnAddNewDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewDepartmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLocLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jEventidLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEventid, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEventidError, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                            .addComponent(lblNameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddNewDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDateError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLocError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTimeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEventidLabel)
                    .addComponent(txtEventid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEventidError))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNameLabel)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLocError)
                    .addComponent(jLocLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDateLabel)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTimeLabel)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeError))
                .addGap(18, 18, 18)
                .addComponent(btnAddNewDepartment)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewDepartmentActionPerformed
        // TODO add your handling code here:

        // verify input data
        // verify that new user does not currently exist
        // if all validations are successful then enter the new user
        try {

            clearErrorLabels();
            if (isValidData()) {

                String prepSQL = "INSERT INTO event (eventid, name, loc, \"Date\", time) VALUES ('"
                        + txtEventid.getText().trim() + "', '"
                        + txtName.getText().trim() + "', '"
                        + txtLoc.getText().trim() + "', '"
                        + txtDate.getText().trim() + "', '"
                        + txtTime.getText().trim() + "')";

                int result = dbCon.executePrepared(prepSQL);
                if (result > 0) {
                    
                    String action = "Event " + txtEventid.getText().trim() + " has been added.";
                    updateLogs(action);

                    javax.swing.JLabel label = new javax.swing.JLabel("New event added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    //clearInputBoxes();
                }

                // rs.close();
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new event.");
        }
    }//GEN-LAST:event_btnAddNewDepartmentActionPerformed

    private void txtEventidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEventidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEventidActionPerformed

    void clearErrorLabels() {
        lblEventidError.setText("");
        lblNameError.setText("");
        lblLocError.setText("");
        lblDateError.setText("");
        lblTimeError.setText("");
    }

    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    public static boolean isValidDate(String dateString) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yy", Locale.ENGLISH);
        dateFormat.setLenient(false); // this will not allow dates like "32-MAR-00"

        try {
            dateFormat.parse(dateString.trim());
            return true;
        } catch (ParseException pe) {
            return false;
        }
    }

    boolean isDuplicateEventID(String eventid) {
        boolean result = false;  // Assume no duplicate exists
        try {
            dbCon = new myDBCon();
            ResultSet newrs;
            // The deptid should be parameterized to prevent SQL injection
            String query = "SELECT * FROM event WHERE eventid = ?";
            PreparedStatement pstmt = dbCon.prepareStatement(query);
            pstmt.setString(1, eventid);
            newrs = pstmt.executeQuery();

            // If newrs.isBeforeFirst() is true, there are rows, hence a duplicate exists
            if (newrs.isBeforeFirst()) {
                result = true;  // There is a duplicate
            }
            newrs.close();
            pstmt.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
        return result;
    }

    void updateLogs(String action) {
        try {
            String prepSQL = "INSERT INTO log VALUES (?,?,?,SYSTIMESTAMP)";
            PreparedStatement preparedStatement = dbCon.prepareStatement(prepSQL);
            preparedStatement.setInt(1, luser.userid);
            preparedStatement.setString(2, luser.username);
            preparedStatement.setString(3, action);
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error inserting the logs.");
        }
    }

    boolean isValidData() throws SQLException {
        clearErrorLabels();
        boolean result = true;

        if (txtEventid.getText().trim().isEmpty()) {
            lblEventidError.setText("Required.");
            lblEventidError.setVisible(true);
            result = false;
        } else if (!isInteger(txtEventid.getText().trim())) {
            lblEventidError.setText("Must be an integer.");
            lblEventidError.setVisible(true);
            result = false;
        } else if (isDuplicateEventID(txtEventid.getText().trim())) {
            lblEventidError.setText("This EventID already exists.");
            lblEventidError.setVisible(true);
            result = false;
        }

        if (txtName.getText().trim().isEmpty()) {
            lblNameError.setText("Required.");
            lblNameError.setVisible(true);
            result = false;
        } else if (txtName.getText().trim().length() > 30) {
            lblNameError.setText("Must be < 30 chars.");
            lblNameError.setVisible(true);
            result = false;
        }

        if (txtLoc.getText().trim().isEmpty()) {
            lblLocError.setText("Required.");
            lblLocError.setVisible(true);
            result = false;
        } else if (txtLoc.getText().trim().length() > 30) {
            lblLocError.setText("Must be < 30 chars.");
            lblLocError.setVisible(true);
            result = false;
        }

        if (txtTime.getText().trim().isEmpty()) {
            lblTimeError.setText("Required.");
            lblTimeError.setVisible(true);
            result = false;
        } else if (txtTime.getText().trim().length() > 20) {
            lblTimeError.setText("Must be < 20 chars.");
            lblTimeError.setVisible(true);
            result = false;
        }

        if (txtDate.getText().trim().isEmpty()) {
            lblDateError.setText("Required.");
            lblDateError.setVisible(true);
            result = false;
        } else if (!isValidDate(txtDate.getText().trim())) {
            lblDateError.setText("Must be in dd-MMM-yy format.");
            lblDateError.setVisible(true);
            result = false;
        }

        return result;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewDepartment;
    private javax.swing.JLabel jDateLabel;
    private javax.swing.JLabel jEventidLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLocLabel;
    private javax.swing.JLabel jNameLabel;
    private javax.swing.JLabel jTimeLabel;
    private javax.swing.JLabel lblDateError;
    private javax.swing.JLabel lblEventidError;
    private javax.swing.JLabel lblLocError;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JLabel lblTimeError;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEventid;
    private javax.swing.JTextField txtLoc;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
